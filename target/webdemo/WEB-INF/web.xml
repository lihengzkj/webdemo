<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>webdemo</display-name>
  
  
	  	<!--start: 解决 JNDI lookup for name [spring.profiles.active] threw NamingException with message: null. Returning null.-->
	    <context-param>  
		    <param-name>spring.profiles.active</param-name>  
		    <param-value>dev</param-value>  
		</context-param>  
		<context-param>  
		    <param-name>spring.profiles.default</param-name>  
		    <param-value>dev</param-value>  
		</context-param>
		<context-param>  
		    <param-name>spring.liveBeansView.mbeanDomain</param-name>  
		    <param-value>dev</param-value>  
		</context-param>
		<!--end: 解决 JNDI lookup for name [spring.profiles.active] threw NamingException with message: null. Returning null.-->
	  
	  <!-- spring context startup spring 的初始化 -->
	  <context-param>
	  	<param-name>contextConfigLocation</param-name>
	  	<!-- spring的配置文件 -->
	  	<param-value>classpath:/config/applicationContext.xml</param-value>
	  </context-param> 
	  
	  
	  <!-- Configuration of Log4j, log4j的配置 -->
	  <context-param>
	  	<param-name>log4jConfigLocation</param-name>
	  	<!-- log4j。properties文件的路径 -->
	  	<param-value>classpath:/config/log4j.properties</param-value>
	  </context-param>
	  <context-param>
	  	<param-name>log4jRefreshInterval</param-name>
	  	<param-value>60000</param-value>
	  </context-param>
	  
	
	  <!-- spring 处理乱码 -->
	  <filter>
	  	<filter-name>encodingFilter</filter-name>
	  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	  	<init-param>
	  		<param-name>encoding</param-name>
	  		<param-value>UTF-8</param-value>
	  	</init-param>
	  </filter>
	  <filter-mapping>
	  	<filter-name>encodingFilter</filter-name>
	  	<url-pattern>/*</url-pattern>
	  </filter-mapping> 
	
	  <listener>
	  	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	  </listener>
	  
	  <!-- 负责启动spring容器的监听器，它将引用 applicationContext.xml中上下文参数获取的spring的配置文件的地址-->
	  <listener>
	  	<listener-class>
	  		org.springframework.web.context.ContextLoaderListener
	  	</listener-class>
	  </listener>
	
	  <!-- spring MVC 的配置 -->
	  <servlet>
	  	<servlet-name>dispatcher</servlet-name>
	  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	  	<init-param>
	  		<param-name>contextConfigLocation</param-name> 
	  		<!-- dispatcher-servlet.xml的路径 -->
	  		<param-value>classpath:/config/dispatcher-servlet.xml</param-value>
	  	</init-param>
	  	<load-on-startup>1</load-on-startup>
	  </servlet>
	  <servlet-mapping>
	  	<servlet-name>dispatcher</servlet-name>
	  	<url-pattern>*.html</url-pattern>
	  </servlet-mapping>
	  
</web-app>
